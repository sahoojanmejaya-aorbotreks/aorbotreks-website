"""
Django settings for aorbo_project project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
import sys
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG  = 'True'

# ALLOWED_HOSTS = config('DJANGO_ALLOWED_HOSTS', default='localhost,127.0.0.1,aorbotreks.com,aorbotreks.onrender.com').split(',')

DEBUG = True

ALLOWED_HOSTS = ["*"]  # allows all hosts for testing

# Security settings for HTTPS


# HSTS settings
if not DEBUG:
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_CONTENT_TYPE_NOSNIFF = True
    REFERRER_POLICY = 'strict-origin'




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',  # Required for runserver_plus
    'whitenoise.runserver_nostatic', # For WhiteNoise
    'corsheaders',
    'rest_framework',
    'csp',
    'axes',
    'treks_app',
    'ckeditor',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
    'axes.middleware.AxesMiddleware',
    "treks_app.middleware.VisitorMiddleware",
]

# Django-Axes settings for rate limiting
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = 1 # 1 hour
AXES_LOCKOUT_TEMPLATE = 'registration/lockout.html'
AXES_LOCKOUT_URL = '/locked/'

AXES_IP_WHITELIST = []
AXES_ENABLE_ACCESS_LOG = True


ROOT_URLCONF = 'aorbo_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'aorbo_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# Database Configuration for Supabase with connection pooling
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT', default='5432'),
    }
}

# SSL Configuration (required for Supabase)
if not DEBUG and 'runserver' not in sys.argv:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend',
    'django.contrib.auth.backends.ModelBackend',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Password Reset Customization
PASSWORD_RESET_FORM = 'treks_app.forms.CustomPasswordResetForm'

# Email settings for password reset
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # Use ConsoleBackend for development
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # Use this for production
# EMAIL_HOST = 'your_smtp_host'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'your_email'
# EMAIL_HOST_PASSWORD = 'your_email_password'

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Password Reset Templates
# These templates need to be created in your templates directory
# For example: templates/registration/password_reset_email.html
# For example: templates/registration/password_reset_subject.txt

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files (Uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOWED_ORIGINS = [
    "https://aorbotreks.com",
    "https://www.aorbotreks.com",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',
        'user': '1000/day'
    }
}

# CSP settings
CONTENT_SECURITY_POLICY = {
    'DIRECTIVES': {
        'base-uri': ("'self'",),
        'connect-src': (
            "'self'",
            'https://aorbotreks.com',
            'https://www.aorbotreks.com',
        ),
        'default-src': (
            "'self'",
            "'unsafe-inline'",
            "'unsafe-eval'",
            'https://fonts.googleapis.com',
            'https://fonts.gstatic.com',
            'https://cdn.jsdelivr.net',
            'https://aorbotreks.com',
            'https://www.aorbotreks.com',
        ),
        'font-src': (
            "'self'",
            'https://fonts.gstatic.com',
            'https://aorbotreks.com',
            'https://www.aorbotreks.com',
        ),
        'form-action': ("'self'",),
        'frame-ancestors': ("'self'",),
        'img-src': (
            "'self'",
            'data:',
            'https://aorbotreks.com',
            'https://www.aorbotreks.com',
            "https://xsconhhzyaiowokwsqne.supabase.co",
        ),
        'object-src': ("'none'",),
        'script-src': (
            "'self'",
            "'unsafe-inline'",
            "'unsafe-eval'",
            'https://cdn.jsdelivr.net',
            'https://aorbotreks.com',
            'https://www.aorbotreks.com',
        ),
        'style-src': (
            "'self'",
            "'unsafe-inline'",
            'https://fonts.googleapis.com',
            'https://cdn.jsdelivr.net',
            'https://aorbotreks.com',
            'https://www.aorbotreks.com',
        ),
    }
}

# Add localhost entries only in DEBUG mode
if DEBUG:
    for directive in ["script-src", "style-src", "img-src", "font-src", "connect-src"]:
        CONTENT_SECURITY_POLICY["DIRECTIVES"][directive] += ("http://localhost:8000",)

SIMPLE_JWT = {
    'TOKEN_OBTAIN_PAIR_SERIALIZER': 'aorbo_project.serializers.MyTokenObtainPairSerializer',
}

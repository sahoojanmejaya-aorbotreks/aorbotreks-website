# Generated by Django 5.0.1 on 2025-04-25 13:59

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('treks_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True, help_text='Short description for blog listings', max_length=300)),
                ('image', models.ImageField(upload_to='blogs/')),
                ('author', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('map_url', models.URLField(blank=True, help_text='Google Maps URL')),
            ],
            options={
                'verbose_name_plural': 'Contact Information',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General'), ('booking', 'Booking & Payment'), ('treks', 'Treks & Activities'), ('safety', 'Safety & Equipment')], default='general', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='HomepageBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('image', models.ImageField(upload_to='banners/')),
                ('button_text', models.CharField(blank=True, max_length=50)),
                ('button_url', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SafetyTip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='safety_icons/')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=50)),
                ('url', models.URLField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='social_icons/')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
            ],
            options={
                'verbose_name_plural': 'Social Media Links',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('bio', models.TextField()),
                ('photo', models.ImageField(upload_to='team/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('linkedin', models.URLField(blank=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Trek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('short_description', models.TextField(blank=True, max_length=300)),
                ('image', models.ImageField(upload_to='treks/')),
                ('duration', models.CharField(help_text="e.g., '2 days, 1 night'", max_length=50)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('difficult', 'Difficult'), ('extreme', 'Extreme')], max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrekCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Trek Categories',
            },
        ),
        migrations.CreateModel(
            name='TrekImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='trek_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TrekOrganizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('logo', models.ImageField(upload_to='organizers/')),
                ('website', models.URLField(blank=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='testimonials/')),
                ('trek_name', models.CharField(blank=True, help_text='Only required if trek is not selected', max_length=200)),
                ('date', models.DateField()),
                ('content', models.TextField()),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('is_featured', models.BooleanField(default=False)),
                ('trek', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='testimonials', to='treks_app.trek')),
            ],
        ),
        migrations.AddField(
            model_name='trek',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treks', to='treks_app.trekcategory'),
        ),
        migrations.AddField(
            model_name='trek',
            name='additional_images',
            field=models.ManyToManyField(blank=True, related_name='trek_images', to='treks_app.trekimage'),
        ),
        migrations.AddField(
            model_name='trek',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treks', to='treks_app.trekorganizer'),
        ),
    ]
